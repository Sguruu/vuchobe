package ru.vuchobe.model;import android.graphics.Bitmap;import java.util.Collections;import java.util.List;import java.util.Map;import java.util.Objects;import ru.vuchobe.util.loaders.Loader;public class EventValue implements Loader.ResultClonable {    private long id;    private String dateStart;    private Address address = Address.DEFAULT;    private String name;    private long type;    private String description;    private String shortDescription;    private List<Long> images = Collections.EMPTY_LIST;    private Map<Long, Bitmap> imagesResources = Collections.EMPTY_MAP;    public EventValue() {    }    public EventValue(long id, String dateStart, Address address, String name, long type, String description, String shortDescription, List<Long> images) {        this.id = id;        this.dateStart = dateStart;        this.address = address;        this.name = name;        this.type = type;        this.description = description;        this.shortDescription = shortDescription;        this.images = images;    }    public EventValue(long id, String dateStart, Address address, String name, long type, String description, String shortDescription, List<Long> images, Map<Long, Bitmap> imagesResources) {        this.id = id;        this.dateStart = dateStart;        this.address = address;        this.name = name;        this.type = type;        this.description = description;        this.shortDescription = shortDescription;        this.images = images;        this.imagesResources = imagesResources;    }    public long getId() {        return id;    }    public void setId(long id) {        this.id = id;    }    public String getDateStart() {        return dateStart;    }    public void setDateStart(String dateStart) {        this.dateStart = dateStart;    }    public Address getAddress() {        return address;    }    public void setAddress(Address address) {        this.address = address;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public long getType() {        return type;    }    public void setType(long type) {        this.type = type;    }    public String getDescription() {        return description;    }    public void setDescription(String description) {        this.description = description;    }    public String getShortDescription() {        return shortDescription;    }    public void setShortDescription(String shortDescription) {        this.shortDescription = shortDescription;    }    public List<Long> getImages() {        return images;    }    public void setImages(List<Long> images) {        this.images = images;    }    public Map<Long, Bitmap> getImagesResources() {        return imagesResources;    }    public void setImagesResources(Map<Long, Bitmap> imagesResources) {        this.imagesResources = imagesResources;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        EventValue that = (EventValue) o;        return id == that.id &&                type == that.type &&                Objects.equals(dateStart, that.dateStart) &&                Objects.equals(address, that.address) &&                Objects.equals(name, that.name) &&                Objects.equals(description, that.description) &&                Objects.equals(shortDescription, that.shortDescription) &&                Objects.equals(images, that.images);    }    @Override    public int hashCode() {        return Objects.hash(id, dateStart, address, name, type, description, shortDescription, images);    }    @Override    public Object clone() {        Address address = Loader.ResultClonable.clone(this.address);        return new EventValue(id, dateStart, address, name, type, description, shortDescription, images);    }    public static class Address implements Loader.ResultClonable{        private long id;        private String fullAddress;        public Address() {        }        public Address(long id, String fullAddress) {            this.id = id;            this.fullAddress = fullAddress;        }        public long getId() {            return id;        }        public void setId(long id) {            this.id = id;        }        public String getFullAddress() {            return fullAddress;        }        public void setFullAddress(String fullAddress) {            this.fullAddress = fullAddress;        }        @Override        public boolean equals(Object o) {            if (this == o) return true;            if (o == null || getClass() != o.getClass()) return false;            Address address = (Address) o;            return id == address.id &&                    Objects.equals(fullAddress, address.fullAddress);        }        @Override        public int hashCode() {            return Objects.hash(id, fullAddress);        }        @Override        public Object clone() {            return new Address(id, fullAddress);        }        public static final Address DEFAULT = new Address(){            @Override            public void setId(long id) {                throw new UnsupportedOperationException("DEFAULT Address unmodification");            }            @Override            public void setFullAddress(String fullAddress) {                throw new UnsupportedOperationException("DEFAULT Address unmodification");            }        };    }    public static final Class<? extends ResponsePageBody<EventValue>> PAGE_BODY_CLASS = ResponsePageBodyEventValue.class;    public static class ResponsePageBodyEventValue extends ResponsePageBody<EventValue>{}}